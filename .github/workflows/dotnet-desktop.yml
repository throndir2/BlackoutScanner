name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v2.0.4, etc.
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write  # Need write permission to create releases and upload assets

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]  # Only build Release for releases

    runs-on: windows-latest

    env:
      Solution_Name: BlackoutScanner.sln
      Project_Path: BlackoutScanner\BlackoutScanner.csproj

    steps:
    # ... (same steps as before until Create Release Archive) ...

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Restore NuGet packages
      run: dotnet restore $env:Solution_Name

    - name: Build the application
      run: dotnet build $env:Solution_Name --configuration $env:Configuration --no-restore
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Execute unit tests
      run: dotnet test $env:Solution_Name --configuration $env:Configuration --no-build --verbosity normal
      env:
        Configuration: ${{ matrix.configuration }}
      continue-on-error: true

    - name: Publish the application
      run: dotnet publish $env:Project_Path -c $env:Configuration -o publish\${{ matrix.configuration }} --self-contained true -r win-x64
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Copy tessdata to publish directory
      run: |
        if (Test-Path "BlackoutScanner\tessdata") {
          Copy-Item -Path "BlackoutScanner\tessdata" -Destination "publish\${{ matrix.configuration }}\tessdata" -Recurse -Force
          Write-Host "Copied tessdata folder to publish directory"
        } else {
          Write-Host "tessdata folder not found in repository"
        }
      shell: pwsh

    - name: Create Release Archive
      run: |
        $zipName = "BlackoutScanner-${{ matrix.configuration }}-x64.zip"
        Compress-Archive -Path publish\${{ matrix.configuration }}\* -DestinationPath $zipName
        Write-Host "Created archive: $zipName"
      shell: pwsh

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: BlackoutScanner-${{ matrix.configuration }}-${{ github.sha }}
        path: BlackoutScanner-${{ matrix.configuration }}-x64.zip
        retention-days: 30

    # Create Release and Upload Assets (only on tags)
    - name: Create Release and Upload Assets
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: BlackoutScanner-${{ matrix.configuration }}-x64.zip
        generate_release_notes: true
        token: ${{ secrets.GITHUB_TOKEN }}